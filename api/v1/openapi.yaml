openapi: "3.1.0"
info:
  version: 0.1.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
instances:
- url: https://petstore.swagger.io/v2
paths:
  /instances:
    get:
      summary: List all instances
      operationId: listInstances
      parameters:
      - name: software
        in: query
        description: filter by software name.
        example: "mastodon"
        required: false
        style: form
        schema:
          type: string
      - name: page
        in: query
        description: page number of results to return
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 1
      - name: per_page
        in: query
        description: number of results to return per page
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 30
      responses:
        '200':
          description: paginated array of instances
          content:
            application/json:
              schema:
                type: object
                required:
                - results
                - total
                - page
                - per_page
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Instance'
                  total:
                    type: integer
                    format: int64
                  page:
                    type: integer
                    format: int32
                  per_page:
                    type: integer
                    format: int32

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /instances/{id}:
    get:
      summary: Info for a specific instance
      operationId: getInstanceByID
      parameters:
      - name: id
        in: path
        description: ID of the instance to fetch
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: instance response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /instances/{id}/crawls:
    get:
      summary: List all crawls for a instance
      operationId: listCrawlsForInstance
      parameters:
      - name: id
        in: path
        description: ID of the instance to fetch
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        description: page number of results to return
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 1
      - name: per_page
        in: query
        description: number of results to return per page
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 30
      responses:
        '200':
          description: paginated array of crawls
          content:
            application/json:
              schema:
                type: object
                required:
                - results
                - total
                - page
                - per_page
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Crawl'
                  total:
                    type: integer
                    format: int64
                  page:
                    type: integer
                    format: int32
                  per_page:
                    type: integer
                    format: int32

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:

    Instance:
      type: object
      required:
      - id
      - domain
      - status
      properties:
        id:
          type: string
          format: uuid
        domain:
          type: string
        status:
          type: string
          enum: [unknown, up, down, unhealthy]
        description:
          type: string
        software:
          type: string
        version:
          type: string
        number_of_peers:
          type: integer
          format: int32
        open_registrations:
          type: boolean
        total_users:
          type: integer
          format: int32
        active_users_half_year:
          type: integer
          format: int32
        active_users_month:
          type: integer
          format: int32
        local_posts:
          type: integer
          format: int32
        local_comments:
          type: integer
          format: int32

    Crawl:
      type: object
      required:
      - id
      - instance_id
      - started_at
      - finished_at
      - duration_seconds
      - status
      properties:
        id:
          type: string
          format: uuid
        instance_id:
          type: string
          format: uuid
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        duration_seconds:
          type: number
          format: double
        status:
          type: string
          enum: [unknown, completed, failed]
        errorCode:
          type: string
        errorCodeDescription:
          type: string
        number_of_peers:
          type: integer
          format: int32
        total_users:
          type: integer
          format: int32
        active_users_half_year:
          type: integer
          format: int32
        active_users_month:
          type: integer
          format: int32
        local_posts:
          type: integer
          format: int32
        local_comments:
          type: integer
          format: int32
        raw_nodeinfo:
          type: object

    Error:
      type: object
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
